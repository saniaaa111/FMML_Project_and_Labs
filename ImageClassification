{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMWmNnoYg+UvQYE3xmQZP8I",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/saniaaa111/FMML_Project_and_Labs/blob/main/ImageClassification\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n3CBy8DkjFIS",
        "outputId": "808cc1f6-e4ae-4551-cf6b-f9456f929125"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "# Mount Google Drive\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import torch\n",
        "import torchvision\n",
        "import torchvision.transforms as transforms\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim\n",
        "from torch.utils.data import DataLoader\n",
        "from torchvision.datasets import CIFAR100\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "hU_UljI1lMDb"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Define transformations for the dataset\n",
        "transform_train = transforms.Compose([\n",
        "    transforms.RandomCrop(32, padding=4),\n",
        "    transforms.RandomHorizontalFlip(),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5)),\n",
        "])\n",
        "\n",
        "transform_test = transforms.Compose([\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5)),\n",
        "])"
      ],
      "metadata": {
        "id": "jL0D1y3-la6m"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Path to the folder containing CIFAR-100 dataset in Google Drive\n",
        "data_path = '/content/drive/MyDrive/MML/cifar-100-python'\n"
      ],
      "metadata": {
        "id": "QtAjIK6vln4e"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load CIFAR-100 dataset\n",
        "trainset = CIFAR100(root=data_path, train=True, download=True, transform=transform_train) # Set download=True to download the dataset\n",
        "trainloader = DataLoader(trainset, batch_size=32, shuffle=True, num_workers=2)\n",
        "\n",
        "testset = CIFAR100(root=data_path, train=False, download=True, transform=transform_test) # Set download=True to download the dataset\n",
        "testloader = DataLoader(testset, batch_size=32, shuffle=False, num_workers=2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H2noeR91lxMC",
        "outputId": "bd8a315a-006d-4fb4-d1af-7a2468817b90"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading https://www.cs.toronto.edu/~kriz/cifar-100-python.tar.gz to /content/drive/MyDrive/MML/cifar-100-python/cifar-100-python.tar.gz\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 169001437/169001437 [00:03<00:00, 43647022.58it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Extracting /content/drive/MyDrive/MML/cifar-100-python/cifar-100-python.tar.gz to /content/drive/MyDrive/MML/cifar-100-python\n",
            "Files already downloaded and verified\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the CNN model\n",
        "class SimpleCNN(nn.Module):\n",
        "    def __init__(self):\n",
        "        super(SimpleCNN, self).__init__()\n",
        "        self.conv1 = nn.Conv2d(3, 16, 3, padding=1)\n",
        "        self.pool = nn.MaxPool2d(2, 2)\n",
        "        self.conv2 = nn.Conv2d(16, 32, 3, padding=1)\n",
        "        self.fc1 = nn.Linear(32 * 8 * 8, 256)\n",
        "        self.fc2 = nn.Linear(256, 100)  # CIFAR-100 has 100 classes\n",
        "\n",
        "    def forward(self, x):\n",
        "        x = self.pool(nn.functional.relu(self.conv1(x)))\n",
        "        x = self.pool(nn.functional.relu(self.conv2(x)))\n",
        "        x = x.view(-1, 32 * 8 * 8)\n",
        "        x = nn.functional.relu(self.fc1(x))\n",
        "        x = self.fc2(x)\n",
        "        return x\n",
        "\n",
        "# Create an instance of the model\n",
        "model = SimpleCNN()\n",
        "\n",
        "# Define loss function and optimizer\n",
        "criterion = nn.CrossEntropyLoss()\n",
        "optimizer = optim.Adam(model.parameters(), lr=0.001)\n",
        "\n",
        "# Initialize lists for plotting\n",
        "train_losses = []\n",
        "train_accuracies = []\n",
        "test_losses = []\n",
        "test_accuracies = []"
      ],
      "metadata": {
        "id": "DVG88m8GmT_3"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Training the model\n",
        "num_epochs = 8\n",
        "for epoch in range(num_epochs):\n",
        "    running_loss = 0.0\n",
        "    correct = 0\n",
        "    total = 0\n",
        "    for i, data in enumerate(trainloader, 0):\n",
        "        inputs, labels = data\n",
        "        optimizer.zero_grad()\n",
        "\n",
        "        outputs = model(inputs)\n",
        "        loss = criterion(outputs, labels)\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        running_loss += loss.item()\n",
        "        _, predicted = outputs.max(1)\n",
        "        total += labels.size(0)\n",
        "        correct += predicted.eq(labels).sum().item()\n",
        "\n",
        "        if i % 200 == 199:    # Print every 200 mini-batches\n",
        "            print('[%d, %5d] loss: %.3f' %\n",
        "                  (epoch + 1, i + 1, running_loss / 200))\n",
        "            train_losses.append(running_loss / 200)\n",
        "            running_loss = 0.0\n",
        "\n",
        "    train_accuracy = 100. * correct / total\n",
        "    train_accuracies.append(train_accuracy)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nln2V8Qhmce0",
        "outputId": "dcb013a2-9b6e-4d6f-fa47-c8a38d852c06"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1,   200] loss: 3.815\n",
            "[1,   400] loss: 3.673\n",
            "[1,   600] loss: 3.592\n",
            "[1,   800] loss: 3.494\n",
            "[1,  1000] loss: 3.433\n",
            "[1,  1200] loss: 3.378\n",
            "[1,  1400] loss: 3.321\n",
            "[2,   200] loss: 3.159\n",
            "[2,   400] loss: 3.161\n",
            "[2,   600] loss: 3.137\n",
            "[2,   800] loss: 3.106\n",
            "[2,  1000] loss: 3.100\n",
            "[2,  1200] loss: 3.029\n",
            "[2,  1400] loss: 3.036\n",
            "[3,   200] loss: 2.919\n",
            "[3,   400] loss: 2.930\n",
            "[3,   600] loss: 2.921\n",
            "[3,   800] loss: 2.898\n",
            "[3,  1000] loss: 2.873\n",
            "[3,  1200] loss: 2.851\n",
            "[3,  1400] loss: 2.806\n",
            "[4,   200] loss: 2.777\n",
            "[4,   400] loss: 2.754\n",
            "[4,   600] loss: 2.764\n",
            "[4,   800] loss: 2.735\n",
            "[4,  1000] loss: 2.745\n",
            "[4,  1200] loss: 2.745\n",
            "[4,  1400] loss: 2.693\n",
            "[5,   200] loss: 2.641\n",
            "[5,   400] loss: 2.649\n",
            "[5,   600] loss: 2.637\n",
            "[5,   800] loss: 2.650\n",
            "[5,  1000] loss: 2.682\n",
            "[5,  1200] loss: 2.624\n",
            "[5,  1400] loss: 2.645\n",
            "[6,   200] loss: 2.573\n",
            "[6,   400] loss: 2.590\n",
            "[6,   600] loss: 2.564\n",
            "[6,   800] loss: 2.550\n",
            "[6,  1000] loss: 2.590\n",
            "[6,  1200] loss: 2.589\n",
            "[6,  1400] loss: 2.546\n",
            "[7,   200] loss: 2.512\n",
            "[7,   400] loss: 2.485\n",
            "[7,   600] loss: 2.501\n",
            "[7,   800] loss: 2.531\n",
            "[7,  1000] loss: 2.498\n",
            "[7,  1200] loss: 2.538\n",
            "[7,  1400] loss: 2.505\n",
            "[8,   200] loss: 2.483\n",
            "[8,   400] loss: 2.465\n",
            "[8,   600] loss: 2.464\n",
            "[8,   800] loss: 2.472\n",
            "[8,  1000] loss: 2.451\n",
            "[8,  1200] loss: 2.472\n",
            "[8,  1400] loss: 2.468\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Evaluate the model on test data\n",
        "correct = 0\n",
        "total = 0\n",
        "with torch.no_grad():\n",
        "    for data in testloader:\n",
        "        images, labels = data\n",
        "        outputs = model(images)\n",
        "        _, predicted = torch.max(outputs.data, 1)\n",
        "        total += labels.size(0)\n",
        "        correct += (predicted == labels).sum().item()\n",
        "\n",
        "print('Accuracy on the test images: %d %%' % (100 * correct / total))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CIN5Eogzm0M6",
        "outputId": "44eca25f-9216-4131-b68f-af6d618bd195"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy on the test images: 37 %\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Plotting function\n",
        "def plot_metrics(train_losses, train_accuracies, test_losses, test_accuracies):\n",
        "    plt.figure(figsize=(10, 5))\n",
        "\n",
        "    # Plot training loss\n",
        "    plt.subplot(1, 2, 1)\n",
        "    plt.plot(train_losses, label='Training Loss')\n",
        "    plt.xlabel('Epoch')\n",
        "    plt.ylabel('Loss')\n",
        "    plt.title('Training Loss over Epochs')\n",
        "    plt.legend()\n",
        "\n",
        "    # Plot training accuracy\n",
        "    plt.subplot(1, 2, 2)\n",
        "    plt.plot(train_accuracies, label='Training Accuracy')\n",
        "    plt.xlabel('Epoch')\n",
        "    plt.ylabel('Accuracy (%)')\n",
        "    plt.title('Training Accuracy over Epochs')\n",
        "    plt.legend()\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "# Call plotting function\n",
        "plot_metrics(train_losses, train_accuracies, test_losses, test_accuracies)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "cHVjX0FztLkG",
        "outputId": "df4bb6cc-c5ff-4614-a3e5-11c3e15b7d64"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}